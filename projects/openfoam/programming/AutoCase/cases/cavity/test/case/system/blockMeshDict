/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1.0e-02;

// From diagram.
x_0 0.000000;
x_1 10.000000;
x_2 10.007963;
x_3 30.007963;

x_4 40.007965;

y_0 0.000000;
y_1 10.000000;
y_2 30.000000;
zmin 0;
zmax 0.05;

g 5;
g_2 10;
g_l 10;
vertices
(
    // block 0
    ($x_0 $y_1 $zmin) // 0
    ($x_1 $y_1 $zmin) // 1
    ($x_1 $y_2 $zmin) // 2
    ($x_0 $y_2 $zmin) // 3

    ($x_0 $y_1 $zmax) // 4
    ($x_1 $y_1 $zmax) // 5
    ($x_1 $y_2 $zmax) // 6
    ($x_0 $y_2 $zmax) // 7

    // block 1 (extra needed)
    ($x_3 $y_1 $zmin) // 8
    ($x_3 $y_2 $zmin) // 9
    ($x_3 $y_1 $zmax) // 10
    ($x_3 $y_2 $zmax) // 11

    // block 2 (extra needed)
    ($x_4 $y_1 $zmin) // 12
    ($x_4 $y_2 $zmin) // 13
    ($x_4 $y_1 $zmax) // 14
    ($x_4 $y_2 $zmax) // 15

    // block 3 (extra needed)
    ($x_2 $y_0 $zmin) // 16
    ($x_3 $y_0 $zmin) // 17
    ($x_2 $y_0 $zmax) // 18
    ($x_3 $y_0 $zmax) // 19
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($g $g_2 1) simpleGrading (1 1 1) // 0
    hex (1 8 9 2 5 10 11 6) ($g_l $g_2 1) simpleGrading (1 1 1) // 1
    hex (8 12 13 9 10 14 15 11) ($g $g_2 1) simpleGrading (1 1 1) // 2
    hex (16 17 8 1 18 19 10 5) ($g_l $g 1) simpleGrading (1 1 1) // 3
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            // Front of tunnel
            (4 7 3 0)
        );
    }

    outlet
    {
        type banana;
        faces
        (
            // Back of tunnel
            (14 12 13 15)
            // Top of tunnel
            (6 2 3 7)
            (11 9 2 6)
            (15 13 9 11)
        );
    }

    wall
    {
        type wall;
        faces
        (
            // leading floor
            (4 0 1 5)
            // leading wall
            (5 1 16 18)
            // cavity floor
            (18 16 17 19)
            // trailing wall
            (8 10 19 17)
            // trailing floor
            (10 8 14 12)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (3 2 1 0)
            (2 9 8 1)
            (9 13 12 8)
            (1 8 17 16)
            (6 7 4 5)
            (11 6 5 10)
            (15 11 10 14)
            (5 18 19 10)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
