/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.1;

// Dimensional Parameters
Lc 10; // Length of Combustion Chamber
Hc 5; // Height of Combustion Chamber
Hd #calc "$Hc + 50"; // Height of Computational Domain

Dt 1; // Diameter of Throat
De 2; // Diameter of Exit

Nc 3; // Length of Converging Nozzle
Nd 4.5; // Length of Diverging Nozzle
Ln #calc "$Nc + $Nd"; // Length of Nozzle

// Coordinate Formulas
x0 0;
x1 $Lc;
x2 #calc "$Lc + $Nc";
x3 #calc "$Lc + $Ln";
x4 #calc "$Lc + $Ln + $Hd";

y0 #calc "-0.5 * $Hc";
y1 #calc "-0.5 * $De";
y2 #calc "-0.5 * $Dt";
y3 #calc "0.5 * $Dt";
y4 #calc "0.5 * $De";
y5 #calc "0.5 * $Hc";
y6 #calc "0.5 * $Hd";
y7 #calc "-0.5 * $Hd";

z0 0;
z1 0.1;

vertices
(
    // hex block 0
    ($x0 $y0 $z0) // 0
    ($x1 $y0 $z0) // 1
    ($x1 $y5 $z0) // 2
    ($x0 $y5 $z0) // 3
    
    ($x0 $y0 $z1) // 4
    ($x1 $y0 $z1) // 5
    ($x1 $y5 $z1) // 6
    ($x0 $y5 $z1) // 7

    // hex block 1
    ($x2 $y2 $z0) // 8
    ($x2 $y3 $z0) // 9

    ($x2 $y2 $z1) // 10
    ($x2 $y3 $z1) // 11

    // hex block 2
    ($x3 $y1 $z0) // 12
    ($x3 $y4 $z0) // 13

    ($x3 $y1 $z1) // 14
    ($x3 $y4 $z1) // 15

    // hex block 3
    ($x4 $y1 $z0) // 16
    ($x4 $y4 $z0) // 17
    ($x4 $y1 $z1) // 18
    ($x4 $y4 $z1) // 19

    // hex block 4
    ($x4 $y6 $z0) // 20
    ($x3 $y6 $z0) // 21

    ($x4 $y6 $z1) // 22
    ($x3 $y6 $z1) // 23

    // hex block 5
    ($x4 $y7 $z0) // 24
    ($x3 $y7 $z0) // 25

    ($x4 $y7 $z1) // 26
    ($x3 $y7 $z1) // 27
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (10 5 1) simpleGrading (1 1 1) // 0
    hex (1 8 9 2 5 10 11 6) (5 5 1) simpleGrading (1 1 1) // 1
    hex (8 12 13 9 10 14 15 11) (5 5 1) simpleGrading (1 1 1) /// 2
    hex (12 16 17 13 14 18 19 15) (40 5 1) simpleGrading (1 1 1) // 3
    hex (13 17 20 21 15 19 22 23) (40 20 1) simpleGrading (1 1 1) // 4
    hex (25 24 16 12 27 26 18 14) (40 20 1) simpleGrading (1 1 1) // 5
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (4 7 3 0)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (23 21 13 15)
            (22 20 21 23)
            (20 22 19 17)
            (17 19 18 16)
            (16 18 26 24)
            (27 25 24 26)
            (14 12 27 25)
        );
    }

    obstacle
    {
        type patch;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)

            (5 1 8 10)
            (2 6 11 9)

            (15 13 9 11)
            (12 14 10 8)

        );
    }

    empty 
    {
        type empty;
        faces
        (
            (3 2 1 0)
            (4 5 6 7)

            (2 9 8 1)
            (6 5 10 11)

            (9 13 12 8)
            (10 14 15 11)

            (21 20 17 13)
            (23 15 19 22)

            (13 17 16 12)
            (15 14 18 19)

            (12 16 24 25)
            (14 27 26 18)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
