/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices #codeStream
{
    codeInclude
    #{
        #include "pointField.H"
    #};

    code
    #{
        pointField points(19);
        points[0]  = point(45, 0, -0.5);
        points[1] = point(50, 0, -0.5);
        points[2] = point(50, 3.74, -0.5);
        points[3] = point(45, 3.74, -0.5);
        points[4] = point(45, 15, -0.5);
        points[5] = point(50, 15, -0.5);
        points[6] = point(50, 20, -0.5);
        points[7] = point(45, 20, -0.5);
        points[8] = point(40, 20, -0.5);
        points[9] = point(40, 15, -0.5);
        points[10] = point(40, 3.74, -0.5); // end of nozzle
        points[11] = point(28.8, 2.58326, -0.5);
        points[12] = point(25, 12.99, -0.5); // midpoint
        points[13] = point(25, 20, -0.5);
        points[14] = point(0, 20, -0.5);
        points[15] = point(0, 12.99, -0.5);
        points[16] = point(0, 0, -0.5);
        points[17] = point(10, 0, -0.5);
        points[18] = point(18, 0, -0.5); // begining of nozzle

        // Duplicate z points
        label sz = points.size();
        points.setSize(2*sz);
        for (label i = 0; i < sz; i++)
        {
            const point& pt = points[i];
            points[i+sz] = point(pt.x(), pt.y(), -pt.z());
        }

        os  << points;
    #};
};


blocks
(
    hex (0 1 2 3 19 20 21 22) (10 10 1) simpleGrading (1 1 1) // 0
    hex (3 2 5 4 22 21 24 23) (10 10 1) simpleGrading (1 1 1) // 1
    hex (4 5 6 7 23 24 25 26) (10 10 1) simpleGrading (1 1 1) // 2
    hex (9 4 7 8 28 23 26 27) (10 10 1) simpleGrading (1 1 1) // 3
    hex (10 3 4 9 29 22 23 28) (10 10 1) simpleGrading (1 1 1) // 4
    hex (11 10 9 12 30 29 28 31) (10 10 1) simpleGrading (1 1 1) // 5
    hex (17 18 11 12 36 37 30 31) (10 10 1) simpleGrading (1 1 1) // 6
    hex (16 17 12 15 35 36 31 34) (10 10 1) simpleGrading (1 1 1) // 7
    hex (15 12 13 14 34 31 32 33) (10 10 1) simpleGrading (1 1 1) // 8
    hex (12 9 8 13 31 28 27 32) (10 10 1) simpleGrading (1 1 1) // 9
);

edges
(
);

boundary
(
    inlet 
    {
        type patch;
        faces
        (
            (35 34 15 16)
            (15 34 33 14)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 2 21 20)
            (2 5 24 21)
            (6 5 24 25)
        );
    }

    top
    {
        type symmetryPlane;
        faces
        (
            (14 13 32 33)
            (13 8 27 32)
            (8 7 27 26)
            (7 6 26 25)
        );
    }

    bottom
    {
        type symmetry;
        faces
        (
            (16 35 36 17)
            (17 36 37 18)
            (0 1 20 19)
        );
    }

    // front and back
    empty
    {
        type empty;
        faces
        (
            (22 21 20 19)
            (23 24 22 21)
            (26 25 24 23)
            (27 26 23 28)
            (28 23 22 29)
            (31 28 29 30)
            (36 31 30 37)
            (35 34 31 36)
            (33 34 32 31)
            (32 27 28 31)
            (0 1 2 3)
            (2 3 4 5)
            (4 5 6 7)
            (8 7 9 4)
            (10 9 4 3)
            (12 9 10 11)
            (17 12 11 18)
            (15 12 17 16)
            (14 13 12 15)
            (13 8 9 12)
        );
    }

    wall
    {
        type patch;
        faces
        (
            (18 11 30 37)
            (11 10 29 30)
            (10 3 22 29)
            (0 3 22 19)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //