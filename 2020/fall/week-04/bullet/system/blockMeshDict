/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices #codeStream
{
    codeInclude
    #{
        #include "pointField.H"
    #};

    code
    #{
        pointField points(19);
        points[0]  = point(25, 0, -0.5);
        points[1] = point(26, 0, -0.5);
        points[2] = point(26, 3.74, -0.5);
        points[3] = point(25, 3.74, -0.5);
        points[4] = point(25, 4.74, -0.5);
        points[5] = point(26, 4.74, -0.5);
        points[6] = point(26, 5.74, -0.5);
        points[7] = point(25, 5.74, -0.5);
        points[8] = point(24, 5.74, -0.5);
        points[9] = point(24, 4.74, -0.5);
        points[10] = point(24, 3.74, -0.5); // end of nozzle
        points[11] = point(12.8, 2.58, -0.5);
        points[12] = point(11.72, 3.66, -0.5); // midpoint
        points[13] = point(11.72, 5.74, -0.5);
        points[14] = point(0, 5.74, -0.5);
        points[15] = point(0, 3.66, -0.5);
        points[16] = point(0, 0, -0.5);
        points[17] = point(1, 0, -0.5);
        points[18] = point(2, 0, -0.5); // end of nozzle

        // Duplicate z points
        label sz = points.size();
        points.setSize(2*sz);
        for (label i = 0; i < sz; i++)
        {
            const point& pt = points[i];
            points[i+sz] = point(pt.x(), pt.y(), -pt.z());
        }

        os  << points;
    #};
};


blocks
(
    hex (0 1 2 3 19 20 21 22) (160 160 1) simpleGrading (1 1 1) // 0
    hex (3 2 5 4 22 21 24 23) (160 160 1) simpleGrading (1 1 1) // 1
    hex (4 5 6 7 23 24 25 26) (160 160 1) simpleGrading (1 1 1) // 2
    hex (9 4 7 8 28 23 26 27) (160 160 1) simpleGrading (1 1 1) // 3
    hex (10 3 4 9 29 22 23 28) (160 160 1) simpleGrading (1 1 1) // 4
    hex (11 10 9 12 30 29 28 31) (160 160 1) simpleGrading (1 1 1) // 5
    hex (17 18 11 12 36 37 30 31) (160 160 1) simpleGrading (1 1 1) // 6
    hex (16 17 12 15 35 36 31 34) (160 160 1) simpleGrading (1 1 1) // 7
    hex (15 12 13 14 34 31 32 33) (160 160 1) simpleGrading (1 1 1) // 8
    hex (12 9 8 13 31 28 27 32) (160 160 1) simpleGrading (1 1 1) // 9
);

edges
(
    polyLine 18 11
    (
        (2.1125 0.091803014 -0.5)
        (2.225 0.154277326 -0.5)
        (2.3375 0.20895 -0.5)
        (2.45 0.25907 -0.5)
        (2.675 0.350609 -0.5)
        (2.9 0.43437 -0.5)
        (3.125 0.512709 -0.5)
        (3.35 0.586923 -0.5)
        (3.575 0.657825 -0.5)
        (3.8 0.725971 -0.5)
        (4.025 0.79176 -0.5)
        (4.25 0.855493 -0.5)
        (4.7 0.977682 -0.5)
        (5.15 1.093912 -0.5)
        (5.6 1.205119 -0.5)
        (6.05 1.3111976 -0.5)
        (6.5 1.41499 -0.5)
        (6.95 1.514552 -0.5)
        (7.4 1.61097 -0.5)
        (7.85 1.704499 -0.5)
        (8.3 1.795338 -0.5)
        (8.75 1.883664 -0.5)
        (9.2 1.969618 -0.5)
        (9.65 2.053323 -0.5)
        (10.1 2.134879 -0.5)
        (10.55 2.214377 -0.5)
        (11 2.291891 -0.5)
        (11.45 2.367486 -0.5)
        (11.9 2.441217 -0.5)
        (12.35 2.513129 -0.5)
    )

    polyLine 37 30
    (
        (2.1125 0.091803014 0.5)
        (2.225 0.154277326 0.5)
        (2.3375 0.20895 0.5)
        (2.45 0.25907 0.5)
        (2.675 0.350609 0.5)
        (2.9 0.43437 0.5)
        (3.125 0.512709 0.5)
        (3.35 0.586923 0.5)
        (3.575 0.657825 0.5)
        (3.8 0.725971 0.5)
        (4.025 0.79176 0.5)
        (4.25 0.855493 0.5)
        (4.7 0.977682 0.5)
        (5.15 1.093912 0.5)
        (5.6 1.205119 0.5)
        (6.05 1.3111976 0.5)
        (6.5 1.41499 0.5)
        (6.95 1.514552 0.5)
        (7.4 1.61097 0.5)
        (7.85 1.704499 0.5)
        (8.3 1.795338 0.5)
        (8.75 1.883664 0.5)
        (9.2 1.969618 0.5)
        (9.65 2.053323 0.5)
        (10.1 2.134879 0.5)
        (10.55 2.214377 0.5)
        (11 2.291891 0.5)
        (11.45 2.367486 0.5)
        (11.9 2.441217 0.5)
        (12.35 2.513129 0.5)
    )

    polyLine 11 10
    (
        (13.25 2.65165 -0.5)
        (13.7 2.718318 -0.5)
        (14.15 2.783286 -0.5)
        (14.6 2.84657 -0.5)
        (15.05 2.90818 -0.5)
        (15.5 2.96812 -0.5)
        (15.95 3.026389 -0.5)
        (16.4 3.082984 -0.5)
        (16.85 3.137892 -0.5)
        (17.3 3.191097 -0.5)
        (17.75 3.242578 -0.5)
        (18.2 3.292303 -0.5)
        (18.65 3.340238 -0.5)
        (19.1 3.386336 -0.5)
        (19.55 3.430544 -0.5)
        (20 3.472795 -0.5)
        (20.45 3.513007 -0.5)
        (20.9 3.551083 -0.5)
        (21.35 3.586901 -0.5)
        (21.8 3.620309 -0.5)
        (22.25 3.651114 -0.5)
        (22.7 3.679058 -0.5)
        (23.15 3.703785 -0.5)
        (23.6 3.724758 -0.5)
    )
    
    polyLine 30 29
    (
        (13.25 2.65165 0.5)
        (13.7 2.718318 0.5)
        (14.15 2.783286 0.5)
        (14.6 2.84657 0.5)
        (15.05 2.90818 0.5)
        (15.5 2.96812 0.5)
        (15.95 3.026389 0.5)
        (16.4 3.082984 0.5)
        (16.85 3.137892 0.5)
        (17.3 3.191097 0.5)
        (17.75 3.242578 0.5)
        (18.2 3.292303 0.5)
        (18.65 3.340238 0.5)
        (19.1 3.386336 0.5)
        (19.55 3.430544 0.5)
        (20 3.472795 0.5)
        (20.45 3.513007 0.5)
        (20.9 3.551083 0.5)
        (21.35 3.586901 0.5)
        (21.8 3.620309 0.5)
        (22.25 3.651114 0.5)
        (22.7 3.679058 0.5)
        (23.15 3.703785 0.5)
        (23.6 3.724758 0.5)
    )
    

);

boundary
(
    inlet 
    {
        type patch;
        faces
        (
            (35 34 15 16)
            (15 34 33 14)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 2 21 20)
            (2 5 24 21)
            (6 5 24 25)
        );
    }

    top
    {
        type symmetryPlane;
        faces
        (
            (14 13 32 33)
            (13 8 27 32)
            (8 7 27 26)
            (7 6 26 25)
        );
    }

    bottom
    {
        type symmetryPlane;
        faces
        (
            (16 35 36 17)
            (17 36 37 18)
            (0 1 20 19)
        );
    }

    // front and back
    empty
    {
        type empty;
        faces
        (
            (22 21 20 19)
            (23 24 22 21)
            (26 25 24 23)
            (27 26 23 28)
            (28 23 22 29)
            (31 28 29 30)
            (36 31 30 37)
            (35 34 31 36)
            (33 34 32 31)
            (32 27 28 31)
            (0 1 2 3)
            (2 3 4 5)
            (4 5 6 7)
            (8 7 9 4)
            (10 9 4 3)
            (12 9 10 11)
            (17 12 11 18)
            (15 12 17 16)
            (14 13 12 15)
            (13 8 9 12)
        );
    }

    wall
    {
        type patch;
        faces
        (
            (18 11 30 37)
            (11 10 29 30)
            (10 3 22 29)
            (0 3 22 19)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //